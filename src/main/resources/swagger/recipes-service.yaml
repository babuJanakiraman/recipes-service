openapi: 3.0.3
info:
  title: Recipe Management API
  version: 1.0.0
  description: API for managing recipes
servers:
  - url: 'http://localhost:8100'
paths:
  /recipe:
    post:
      tags:
        - Recipe
      summary: Add a new recipe
      operationId: addRecipe
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDto'
      responses:
        '201':
          description: Recipe created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /recipe/{id}:
    get:
      tags:
        - Recipe
      summary: Get a recipe by ID
      operationId: getRecipeById
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Recipe
      summary: Update a recipe by ID
      operationId: updateRecipeById
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDto'
      responses:
        '200':
          description: Recipe updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Recipe
      summary: Delete a recipe by ID
      operationId: deleteRecipeById
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Recipe deleted successfully
          content:
            application/json:
              schema:
                type: string
                example: Recipe deleted successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /recipes:
    get:
      tags:
        - Recipe
      summary: Search recipes
      operationId: searchRecipes
      security:
        - basicAuth: [ ]
      parameters:
        - name: vegetarian
          in: query
          required: false
          schema:
            type: boolean
        - name: servings
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: includeIngredients
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 50
        - name: excludeIngredients
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 50
        - name: instructions
          in: query
          required: false
          schema:
            type: string
            minLength: 1
            maxLength: 50
      responses:
        '200':
          description: A list of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    RecipeDto:
      type: object
      required:
        - name
        - vegetarian
        - servings
        - ingredients
        - instructions
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: "Kadai Paneer"
        vegetarian:
          type: boolean
        servings:
          type: integer
          minimum: 1
        ingredients:
          type: array
          minItems: 1
          maxItems: 20
          items:
            type: string
            minLength: 1
            maxLength: 50
        instructions:
          type: string
          minLength: 5
          maxLength: 250
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        detailedMessage:
          type: string